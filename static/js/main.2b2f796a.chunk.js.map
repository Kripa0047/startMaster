{"version":3,"sources":["Components/UserDetail/UserDetail.module.css","Containers/Details/Details.module.css","Components/Loader/Loader.module.css","assets/GIF/bb8Loader.gif","Components/Banner/Banner.module.css","assets/image/Star-Wars.jpg","Components/Detail/Detail.module.css","Components/Loader/Loader.js","Components/Banner/Banner.js","Components/Detail/Detail.js","Components/UserDetail/UserDetail.js","Containers/UserDetail/UserDetail.js","Containers/Details/Details.js","Containers/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loader","props","className","styles","container","src","bb8LoaderGIF","alt","banner","StarWars","detail","onClick","OnClick","col","name","gender","charAt","toUpperCase","slice","height","homeworld","birthYear","userDetail","subContainer","col_30","col_70","mass","hair_color","skin_color","eye_color","birth_year","films","map","film","index","key","species","vehicles","vehicle","starships","starship","UserDetail","state","data","isLoader","loaderCheck","length","setState","findFilms","filmURLs","len","root","push","i","axios","then","response","title","findSpecies","speciesURL","findVehicles","vehiclesURLs","starshipsURLs","this","Loader","Component","Details","personData","dataToDisplay","dataToSort","count","page","totalPage","filterListShow","planets","selectedplanets","searchText","pages","Math","ceil","j","tempData","getPlanets","includes","changePage","val","currentPage","onClickPersonHandler","sortByName","sort","a","b","sortByHeight","Number","onSortHandler","event","sortBy","target","innerHTML","homeworldOnClickHandler","findCommonPeopleWithPlanet","toDisplay","planetOnClickHandler","selectedplanet","indexOf","splice","searchHandler","keyCode","toLowerCase","path","taskbar","tools","style","position","worldList","planet","listItems","background","search","type","placeholder","onKeyUp","onChange","e","value","sortTag","borderRight","id","header","detailStyles","notFound","person","to","Detail","pagination","pageControl","color","borderColor","pageNumber","HomePage","isDataLoad","loaderHandler","lodarState","setHomeWorld","promises","Promise","all","getAllStarwarsPeople","people","results","numberOfPagesLeft","reduce","acc","catch","error","console","log","Banner","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b2f796a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserDetail_container__3prx4\",\"subContainer\":\"UserDetail_subContainer__3055k\",\"col_30\":\"UserDetail_col_30__2-qVu\",\"col_70\":\"UserDetail_col_70__-WR8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskbar\":\"Details_taskbar__PCWK7\",\"homeworld\":\"Details_homeworld__S4nTH\",\"worldList\":\"Details_worldList__RovIL\",\"listItems\":\"Details_listItems__RgCAh\",\"search\":\"Details_search__30wnH\",\"tools\":\"Details_tools__KTa4x\",\"sortTag\":\"Details_sortTag__1uFJd\",\"notFound\":\"Details_notFound__1YOQz\",\"container\":\"Details_container__1rmzK\",\"header\":\"Details_header__3R3gt\",\"pagination\":\"Details_pagination__1GN7A\",\"pageControl\":\"Details_pageControl__ji8Qi\",\"pageNumber\":\"Details_pageNumber__c7fbC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2SCiW\"};","module.exports = __webpack_public_path__ + \"static/media/bb8Loader.18c3da0d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Banner_container__PkB4F\"};","module.exports = __webpack_public_path__ + \"static/media/Star-Wars.84f50a53.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__2Xyrt\",\"col_name\":\"Detail_col_name__1QH2p\",\"col\":\"Detail_col__3ltOA\"};","import React from 'react';\r\nimport styles from './Loader.module.css';\r\nimport bb8LoaderGIF from '../../assets/GIF/bb8Loader.gif';\r\n\r\nconst loader = (props) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <img src={bb8LoaderGIF} alt=\"loader...\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default loader;","import React from 'react';\r\nimport styles from './Banner.module.css';\r\nimport StarWars from '../../assets/image/Star-Wars.jpg';\r\n\r\nconst banner = (props)=>{\r\n    return(\r\n        <div className={styles.container}>\r\n            <img src={StarWars} alt=\"banner\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default banner;","import React from 'react';\r\nimport styles from './Detail.module.css';\r\n\r\nconst detail = (props) => {\r\n    return (\r\n        <div className={styles.container} onClick={props.OnClick}>\r\n            <div className={styles.col}>\r\n                {props.name}\r\n            </div>\r\n            <div className={styles.col}>\r\n                {\r\n                    props.gender === \"n/a\"\r\n                        ?\r\n                        props.gender\r\n                        :\r\n                        props.gender.charAt(0).toUpperCase() + props.gender.slice(1)\r\n                }\r\n            </div>\r\n            <div className={styles.col}>\r\n                {\r\n                    props.height === \"unknown\"\r\n                        ?\r\n                        props.height\r\n                        :\r\n                        props.height + \" cm\"\r\n                }\r\n            </div>\r\n            <div className={styles.col}>\r\n                {props.homeworld}\r\n            </div>\r\n            <div className={styles.col}>\r\n                {props.birthYear}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default detail;","import React from 'react';\r\nimport styles from './UserDetail.module.css';\r\n\r\nconst userDetail = (props) => {\r\n    // console.log(\"details : \", props.detail);\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Name</div>\r\n                <div className={styles.col_70}>{props.detail.name}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Height</div>\r\n                <div className={styles.col_70}>{props.detail.height}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Mass</div>\r\n                <div className={styles.col_70}>{props.detail.mass}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Hair Color</div>\r\n                <div className={styles.col_70}>{props.detail.hair_color}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Skin Color</div>\r\n                <div className={styles.col_70}>{props.detail.skin_color}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Eye Color</div>\r\n                <div className={styles.col_70}>{props.detail.eye_color}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Birth Year</div>\r\n                <div className={styles.col_70}>{props.detail.birth_year}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Gender</div>\r\n                <div className={styles.col_70}>{props.detail.gender}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Home World</div>\r\n                <div className={styles.col_70}>{props.detail.homeworld}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Films</div>\r\n                <div className={styles.col_70}>\r\n                    {\r\n                        props.films.map((film, index)=> (\r\n                            <div key={index}>\r\n                                {film}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Specises</div>\r\n                <div className={styles.col_70}>{props.species}</div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Vehicles</div>\r\n                <div className={styles.col_70}>\r\n                    {\r\n                        props.vehicles.map((vehicle, index)=> (\r\n                            <div key={index}>\r\n                                {vehicle}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.col_30}>Startships</div>\r\n                <div className={styles.col_70}>\r\n                    {\r\n                        props.starships.map((starship, index)=> (\r\n                            <div key={index}>\r\n                                {starship}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default userDetail;","import React, { Component } from 'react';\r\nimport Detail from '../../Components/UserDetail/UserDetail';\r\nimport Loader from '../../Components/Loader/Loader';\r\nimport axios from 'axios';\r\n\r\nclass UserDetail extends Component {\r\n    state = {\r\n        data: this.props.detail,\r\n        isLoader: true,\r\n        films: [],\r\n        species: '',\r\n        vehicles: [],\r\n        starships: []\r\n    }\r\n\r\n    loaderCheck = () => {\r\n        if (this.state.films.length !== 0 && this.state.species !== '' && this.state.vehicles.length !== 0 && this.state.starships.length !== 0) {\r\n            this.setState({ isLoader: false });\r\n            // console.log(this.state);\r\n        }\r\n    }\r\n\r\n    findFilms = () => {\r\n        // console.log(this.state.data.films);\r\n        let films = [];\r\n        let filmURLs = this.state.data.films;\r\n        let len = filmURLs.length;\r\n        let root = this;\r\n        if (len === 0) {\r\n            films.push(\"None\");\r\n        }\r\n        else {\r\n            for (let i = 0; i < len; i++) {\r\n                axios(filmURLs[i])\r\n                    .then(response => {\r\n                        // console.log(response);\r\n                        films.push(response.data.title);\r\n                        root.loaderCheck();\r\n                    })\r\n            }\r\n            // console.log(films);\r\n        }\r\n        this.setState({ films: films });\r\n    }\r\n\r\n    findSpecies = () => {\r\n        // console.log(this.state.data.species);\r\n        let root = this;\r\n        let speciesURL = this.state.data.species;\r\n        if (speciesURL.length === 0) {\r\n            this.setState({ species: \"None\" });\r\n        }\r\n        else {\r\n            axios(speciesURL[0])\r\n                .then(response => {\r\n                    // console.log(response);\r\n                    this.setState({ species: response.data.name });\r\n                    root.loaderCheck();\r\n                })\r\n        }\r\n    }\r\n\r\n    findVehicles = () => {\r\n        let vehiclesURLs = this.state.data.vehicles;\r\n        let len = vehiclesURLs.length;\r\n        let vehicles = [];\r\n        let root = this;\r\n        if (len === 0) {\r\n            vehicles.push(\"None\");\r\n        }\r\n        else {\r\n            for (let i = 0; i < len; i++) {\r\n                axios(vehiclesURLs[i])\r\n                    .then(response => {\r\n                        // console.log(response);\r\n                        vehicles.push(response.data.name);\r\n                        root.loaderCheck();\r\n                    })\r\n            }\r\n        }\r\n        this.setState({ vehicles: vehicles });\r\n    }\r\n\r\n    starships = () => {\r\n        let starshipsURLs = this.state.data.starships;\r\n        let len = starshipsURLs.length;\r\n        let starships = [];\r\n        let root = this;\r\n        if (len === 0) {\r\n            starships.push(\"None\");\r\n        }\r\n        else {\r\n            for (let i = 0; i < len; i++) {\r\n                axios(starshipsURLs[i])\r\n                    .then(response => {\r\n                        // console.log(response);\r\n                        starships.push(response.data.name);\r\n                        root.loaderCheck();\r\n                    })\r\n            }\r\n        }\r\n        this.setState({ starships: starships });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.findFilms();\r\n        this.findSpecies();\r\n        this.findVehicles();\r\n        this.starships();\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.data);\r\n        return (\r\n            this.state.isLoader\r\n                ?\r\n                <Loader />\r\n                :\r\n                <Detail\r\n                    detail={this.state.data}\r\n                    films={this.state.films}\r\n                    species={this.state.species}\r\n                    vehicles={this.state.vehicles}\r\n                    starships={this.state.starships} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserDetail;","import React, { Component } from 'react';\r\nimport styles from './Details.module.css';\r\nimport detailStyles from '../../Components/Detail/Detail.module.css';\r\nimport Detail from '../../Components/Detail/Detail';\r\nimport Loader from '../../Components/Loader/Loader';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport UserDetail from '../../Containers/UserDetail/UserDetail';\r\n\r\nclass Details extends Component {\r\n    state = {\r\n        data: this.props.personData,\r\n        dataToDisplay: [],\r\n        dataToSort: this.props.personData,\r\n        count: this.props.count,\r\n        page: 1,\r\n        totalPage: 0,\r\n        isLoader: true,\r\n        filterListShow: false,\r\n        planets: [],\r\n        selectedplanets: [],\r\n        searchText: '',\r\n        detail: []\r\n    }\r\n\r\n    dataToDisplay = (data) => {\r\n        // let page = this.state.page;\r\n        // let data = this.state.data;\r\n        let count = data.length;\r\n        let personData = [];\r\n        let pages = Math.ceil((count) / 10);\r\n        // console.log(\"Pages : \", pages);\r\n        for (let i = 0; i < pages; i++) {\r\n            let j = 0;\r\n            let tempData = [];\r\n            // console.log(count);\r\n            while (j < 10 && j < count) {\r\n                tempData.push(data[i * 10 + j])\r\n                j++;\r\n            }\r\n            count -= 10;\r\n            personData.push({ data: tempData });\r\n        }\r\n        // console.log(personData[0]);\r\n        this.setState({ dataToDisplay: personData, isLoader: false, totalPage: pages });\r\n    }\r\n\r\n    getPlanets = () => {\r\n        let data = this.state.data;\r\n        let planets = [];\r\n        let count = this.state.count;\r\n        for (let i = 0; i < count; i++) {\r\n            if (!planets.includes(data[i].homeworld)) {\r\n                planets.push(data[i].homeworld);\r\n            }\r\n        }\r\n        // console.log(planets);\r\n        this.setState({ planets: planets });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dataToDisplay(this.state.data);\r\n        this.getPlanets();\r\n    }\r\n\r\n    changePage = (val) => {\r\n        let currentPage = this.state.page;\r\n        if (val === 1) {\r\n            if (currentPage === this.state.totalPage || this.state.totalPage === 0) {\r\n                return;\r\n            }\r\n        }\r\n        else if (val === -1) {\r\n            if (currentPage === 1) {\r\n                return;\r\n            }\r\n        }\r\n        this.setState({ page: currentPage + val });\r\n    }\r\n\r\n    onClickPersonHandler = (index) => {\r\n        // console.log(\"index : \", index);\r\n        this.setState({ detail: this.state.data[(this.state.page-1)*10+index] })\r\n    }\r\n\r\n    sortByName = () => {\r\n        // console.log(\"sorting by name\");\r\n        this.setState({ isLoader: true });\r\n        let data = this.state.dataToSort;\r\n        function compare(a, b) {\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n        data.sort(compare);\r\n        // this.setState({ data: data });\r\n        this.dataToDisplay(data);\r\n        // console.log(data);\r\n    }\r\n\r\n    sortByHeight = () => {\r\n        // console.log(\"sort by height\");\r\n        this.setState({ isLoader: true });\r\n        let data = this.state.dataToSort;\r\n        function compare(a, b) {\r\n            if (a.height === \"unknown\") {\r\n                return 1;\r\n            }\r\n            if (b.height === \"unknown\") {\r\n                return -1;\r\n            }\r\n            if (Number(a.height) < Number(b.height)) {\r\n                return -1;\r\n            }\r\n            if (Number(a.height) > Number(b.height)) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n        data.sort(compare);\r\n        // this.setState({ data: data });\r\n        this.dataToDisplay(data);\r\n        // console.log(data);\r\n    }\r\n\r\n    onSortHandler = (event) => {\r\n        // console.log(event.target.innerHTML);\r\n        let sortBy = event.target.innerHTML;\r\n        if (sortBy === \"Name\") {\r\n            this.sortByName();\r\n        }\r\n        else if (sortBy === \"Height\") {\r\n            this.sortByHeight();\r\n        }\r\n    }\r\n\r\n    homeworldOnClickHandler = () => {\r\n        let filterListShow = this.state.filterListShow;\r\n        this.setState({ filterListShow: !filterListShow });\r\n    }\r\n\r\n    findCommonPeopleWithPlanet = () => {\r\n        // console.log(\"finding\");\r\n        let data = this.state.data;\r\n        let count = this.state.count;\r\n        let toDisplay = [];\r\n        let selectedplanets = this.state.selectedplanets;\r\n        for (let i = 0; i < count; i++) {\r\n            if (selectedplanets.includes(data[i].homeworld)) {\r\n                toDisplay.push(data[i]);\r\n            }\r\n        }\r\n        // console.log(toDisplay);\r\n        this.dataToDisplay(toDisplay);\r\n        this.setState({ dataToSort: toDisplay });\r\n    }\r\n\r\n    planetOnClickHandler = (event) => {\r\n        this.setState({ page: 1 });\r\n        // console.log(event.target.innerHTML);\r\n        let selectedplanets = this.state.selectedplanets;\r\n        let selectedplanet = event.target.innerHTML;\r\n        let index = selectedplanets.indexOf(selectedplanet);\r\n        if (index !== -1) {\r\n            selectedplanets.splice(index, 1);\r\n            if (selectedplanets.length === 0) {\r\n                this.setState({ dataToSort: this.state.data });\r\n                this.dataToDisplay(this.state.data);\r\n            }\r\n            else {\r\n                this.setState({ selectedplanets: selectedplanets });\r\n                this.findCommonPeopleWithPlanet();\r\n            }\r\n        }\r\n        else {\r\n            selectedplanets.push(selectedplanet);\r\n            this.setState({ selectedplanets: selectedplanets });\r\n            this.findCommonPeopleWithPlanet();\r\n        }\r\n        // console.log(selectedplanets);\r\n    }\r\n\r\n    searchHandler = (event) => {\r\n        // console.log(event.target.value);\r\n        if (event.keyCode === 13) {\r\n            // console.log(this.state.searchText);\r\n            this.setState({ page: 1 });\r\n            let searchText = this.state.searchText.toLowerCase();\r\n            if (searchText === \"\") {\r\n                this.dataToDisplay(this.state.data);\r\n            }\r\n            else {\r\n                let data = this.state.data;\r\n                let toDisplay = [];\r\n                let count = this.state.count;\r\n                for (let i = 0; i < count; i++) {\r\n                    let name = data[i].name.toLowerCase();\r\n                    let homeworld = data[i].homeworld.toLowerCase();\r\n                    if (name.includes(searchText, 1) || homeworld.includes(searchText, 1)) {\r\n                        toDisplay.push(data[i]);\r\n                    }\r\n                }\r\n                this.dataToDisplay(toDisplay);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.personData);\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/about\">\r\n                        <UserDetail \r\n                            detail={this.state.detail}\r\n                        />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <div>\r\n                            <div className={styles.taskbar}>\r\n                                <div className={styles.tools} style={{ position: \"relative\" }}>\r\n                                    <span>Filter : </span>\r\n                                    <span className={styles.homeworld} onClick={this.homeworldOnClickHandler}>Homeworld</span>\r\n                                    {\r\n                                        this.state.filterListShow\r\n                                            ?\r\n                                            <div className={styles.worldList}>\r\n                                                {\r\n                                                    this.state.planets.map((planet) => (\r\n                                                        <div className={styles.listItems} key={planet}\r\n                                                            onClick={(event) => this.planetOnClickHandler(event)}\r\n                                                            style={this.state.selectedplanets.includes(planet) ? { background: \"#292929\" } : null}>{planet}</div>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                                <div className={styles.tools}>\r\n                                    <span>\r\n                                        <input className={styles.search} type=\"text\" placeholder=\"Search\"\r\n                                            onKeyUp={(event) => this.searchHandler(event)}\r\n                                            onChange={(e) => this.setState({ searchText: e.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className={styles.tools}>\r\n                                    <span >Sort By : </span>\r\n                                    <span className={styles.sortTag} style={{ borderRight: \"2px solid grey\" }}\r\n                                        onClick={(event) => this.onSortHandler(event)} >Name</span>\r\n                                    <span className={styles.sortTag}\r\n                                        onClick={(event) => this.onSortHandler(event)} >Height</span>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.isLoader\r\n                                    ?\r\n                                    <Loader />\r\n                                    :\r\n                                    <div id=\"personList\" className={styles.container}>\r\n                                        <div className={styles.header}>\r\n                                            <div className={detailStyles.col}>\r\n                                                Name\r\n                                            </div>\r\n                                            <div className={detailStyles.col}>\r\n                                                Gender\r\n                                            </div>\r\n                                            <div className={detailStyles.col}>\r\n                                                Height\r\n                                            </div>\r\n                                            <div className={detailStyles.col}>\r\n                                                Home World\r\n                                            </div>\r\n                                            <div className={detailStyles.col}>\r\n                                                Birth Year\r\n                                        </div>\r\n                                        </div>\r\n                                        {\r\n                                            this.state.totalPage === 0\r\n                                                ?\r\n                                                <div className={styles.notFound}>\r\n                                                    No Data Found !!\r\n                                                </div>\r\n                                                :\r\n                                                this.state.dataToDisplay[this.state.page - 1].data.map((person, index) => (\r\n                                                    <Link to=\"/about\" key={index}>\r\n                                                        <Detail\r\n                                                            OnClick={() => this.onClickPersonHandler(index)}\r\n                                                            name={person.name}\r\n                                                            gender={person.gender}\r\n                                                            height={person.height}\r\n                                                            homeworld={person.homeworld}\r\n                                                            birthYear={person.birth_year}\r\n\r\n                                                        />\r\n                                                    </Link>\r\n                                                ))\r\n                                        }\r\n\r\n                                        <div className={styles.pagination}>\r\n                                            <span className={styles.pageControl} onClick={() => this.changePage(-1)}\r\n                                                style={this.state.page === 1 ? { color: \"#808080\", borderColor: \"#808080\" } : null} >pre</span>\r\n                                            <span className={styles.pageNumber}>{this.state.page}</span>\r\n                                            <span className={styles.pageControl} onClick={() => this.changePage(1)}\r\n                                                style={this.state.page === this.state.totalPage || this.state.totalPage === 0 ? { color: \"#808080\", borderColor: \"#808080\" } : null} >next</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from 'react';\r\nimport Loader from '../../Components/Loader/Loader';\r\nimport Banner from '../../Components/Banner/Banner';\r\nimport Details from '../Details/Details';\r\nimport axios from 'axios';\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        data: [],\r\n        isDataLoad: false,\r\n        count: 0\r\n    }\r\n\r\n    loaderHandler = (lodarState)=> {\r\n        this.setState({isDataLoad: lodarState})\r\n    }\r\n\r\n    setHomeWorld = () => {\r\n        let root = this;\r\n        let personData = [];\r\n        let promises = [];\r\n        let person = this.state.data[0];\r\n        axios(person.homeworld)\r\n            .then(response => {\r\n                person.homeworld = response.data.name;\r\n                personData.push(person);\r\n                return root.state.count;\r\n            }).then((count) => {\r\n                // let data\r\n                for (let i = 1; i < count; i++) {\r\n                    // console.log(\"data:\", root.state.data[i]);\r\n                    person = root.state.data[i];\r\n                    promises.push(axios(person.homeworld));\r\n                }\r\n                return Promise.all(promises);\r\n            })\r\n            .then(response => {\r\n                // console.log(\"ner\", response);\r\n                let count = response.length;\r\n                // console.log(count);\r\n                for (let i = 0; i < count; i++) {\r\n                    // console.log(\"data:\", response[i]);\r\n                    person = root.state.data[i+1];\r\n                    person.homeworld = response[i].data.name;\r\n                    personData.push(person);\r\n                }\r\n                root.setState({\r\n                    data: personData,\r\n                    isDataLoad: true\r\n                })\r\n            })\r\n    }\r\n\r\n    getAllStarwarsPeople = () => {\r\n        let root = this;\r\n        let people = [];\r\n\r\n        axios(\"https://swapi.co/api/people/\")\r\n            .then(response => {\r\n                people = response.data.results;\r\n                root.setState({ count: response.data.count });\r\n                return response.data.count;\r\n            })\r\n            .then(count => {\r\n                const numberOfPagesLeft = Math.ceil((count - 1) / 10);\r\n                let promises = [];\r\n                for (let i = 2; i <= numberOfPagesLeft; i++) {\r\n                    promises.push(axios(`https://swapi.co/api/people?page=${i}`));\r\n                }\r\n                return Promise.all(promises);\r\n            })\r\n            .then(response => {\r\n                // console.log(\"respose\", response);\r\n                people = response.reduce((acc, data) => [...acc, ...data.data.results], people);\r\n                root.setState({\r\n                    data: people,\r\n                })\r\n                root.setHomeWorld();\r\n                return people;\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllStarwarsPeople();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Banner />\r\n                {this.state.isDataLoad ?\r\n                    <Details\r\n                        personData={this.state.data} \r\n                        count={this.state.count} />\r\n                    :\r\n                    <Loader />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport HomePage from './Containers/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}